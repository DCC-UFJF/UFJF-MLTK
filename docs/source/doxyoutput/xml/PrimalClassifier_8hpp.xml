<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="PrimalClassifier_8hpp" kind="file" language="C++">
    <compoundname>PrimalClassifier.hpp</compoundname>
    <includes refid="Classifier_8hpp" local="yes">Classifier.hpp</includes>
    <includedby refid="IMA_8hpp" local="yes">/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Classifier/include/IMA.hpp</includedby>
    <includedby refid="KNN_8hpp" local="yes">/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Classifier/include/KNN.hpp</includedby>
    <includedby refid="Perceptron_8hpp" local="yes">/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Classifier/include/Perceptron.hpp</includedby>
    <includedby refid="AOS_8cpp" local="yes">/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/FeatureSelection/src/AOS.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>Kernel.hpp</label>
        <link refid="Kernel_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>iterator</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="17">
        <label>Point.hpp</label>
        <link refid="Point_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>numeric</label>
      </node>
      <node id="2">
        <label>Classifier.hpp</label>
        <link refid="Classifier_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Classifier/include/PrimalClassifier.hpp</label>
        <link refid="PrimalClassifier_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>fstream</label>
      </node>
      <node id="4">
        <label>Solution.hpp</label>
        <link refid="Solution_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Statistics.hpp</label>
        <link refid="Statistics_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cstdio</label>
      </node>
      <node id="23">
        <label>ctime</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="9">
        <label>utility</label>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="18">
        <label>Utils.hpp</label>
        <link refid="Utils_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Timer.hpp</label>
        <link refid="Timer_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>Learner.hpp</label>
        <link refid="Learner_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="10">
        <label>Data.hpp</label>
        <link refid="Data_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Ensemble/src/PrimalPercCommittee.hpp</label>
        <link refid="PrimalPercCommittee_8hpp_source"/>
      </node>
      <node id="1">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Classifier/include/PrimalClassifier.hpp</label>
        <link refid="PrimalClassifier_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Classifier/include/IMA.hpp</label>
        <link refid="IMA_8hpp"/>
      </node>
      <node id="3">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Classifier/include/KNN.hpp</label>
        <link refid="KNN_8hpp_source"/>
      </node>
      <node id="4">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Classifier/include/Perceptron.hpp</label>
        <link refid="Perceptron_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classPrimalClassifier" prot="public">PrimalClassifier</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classPrimalClassifier" kindref="compound">PrimalClassifier</ref> base class</para>
<para><simplesect kind="author"><para>Mateus Coutinho Marim </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>PRIMALCLASSIFIER__HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRIMALCLASSIFIER__HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Classifier_8hpp" kindref="compound">Classifier.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="12" refid="classPrimalClassifier" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classPrimalClassifier" kindref="compound">PrimalClassifier</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classClassifier" kindref="compound">Classifier</ref>&lt;<sp/>T<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">protected<sp/>:</highlight></codeline>
<codeline lineno="16" refid="classPrimalClassifier_1a6191919f25a037b6a61d00ebda18f41e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classPrimalClassifier_1a6191919f25a037b6a61d00ebda18f41e" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="18" refid="classPrimalClassifier_1ae30c00c25bce4b1623baa54b5e2812b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1ae30c00c25bce4b1623baa54b5e2812b4" kindref="member">q</ref><sp/>=<sp/>2,<sp/>p<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="classPrimalClassifier_1a5d41554dc1158ede39d387fecf73c96e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1a5d41554dc1158ede39d387fecf73c96e" kindref="member">flexible</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="24" refid="classPrimalClassifier_1a2668546ac4a39e10f72cbd2e865c41a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1a2668546ac4a39e10f72cbd2e865c41a7" kindref="member">alpha_aprox</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classPrimalClassifier_1a3d6ff7dd172d7632e597cb0a76d53a80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1a3d6ff7dd172d7632e597cb0a76d53a80" kindref="member">evaluate</ref>(<ref refid="classPoint" kindref="compound">Point&lt; T &gt;</ref><sp/>p)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>func<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>dim<sp/>=<sp/>this-&gt;<ref refid="classClassifier_1adecdc97505c2911a66e240ad0fefd9ea" kindref="member">solution</ref>.<ref refid="classSolution_1a736054c66aab1014bba4a71de293ad2f" kindref="member">w</ref>.size();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p.<ref refid="classPoint_1a8b8cc26f89935fdc83ed464c053c0476" kindref="member">x</ref>.size()<sp/>!=<sp/>dim){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>point<sp/>must<sp/>have<sp/>the<sp/>same<sp/>dimension<sp/>of<sp/>the<sp/>feature<sp/>set!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(func<sp/>=<sp/>this-&gt;<ref refid="classClassifier_1adecdc97505c2911a66e240ad0fefd9ea" kindref="member">solution</ref>.<ref refid="classSolution_1ac0a589a77d238aecf14c91f55d1b8daa" kindref="member">bias</ref>,<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>+=<sp/>this-&gt;<ref refid="classClassifier_1adecdc97505c2911a66e240ad0fefd9ea" kindref="member">solution</ref>.<ref refid="classSolution_1a736054c66aab1014bba4a71de293ad2f" kindref="member">w</ref>[i]<sp/>*<sp/>p[i];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(func<sp/>&gt;=<sp/>0)?1:-1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*********************************************</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Getters<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classPrimalClassifier_1a73f82851a3b2c54803d56fa92cc42a8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classPrimalClassifier_1a73f82851a3b2c54803d56fa92cc42a8b" kindref="member">getFormulationString</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Primal&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="52" refid="classPrimalClassifier_1a43de98b120ea5b096d254db8d48ebe45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1a43de98b120ea5b096d254db8d48ebe45" kindref="member">getP</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="57" refid="classPrimalClassifier_1a3efea418c124ff9cf24bfefc54959ff9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1a3efea418c124ff9cf24bfefc54959ff9" kindref="member">getQ</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1ae30c00c25bce4b1623baa54b5e2812b4" kindref="member">q</ref>;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*********************************************</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Setters<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classPrimalClassifier_1a7e6953c01b190e6ef968b75bd578ad7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1a7e6953c01b190e6ef968b75bd578ad7d" kindref="member">setqNorm</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1ae30c00c25bce4b1623baa54b5e2812b4" kindref="member">q</ref>)<sp/>{this-&gt;q<sp/>=<sp/><ref refid="classPrimalClassifier_1ae30c00c25bce4b1623baa54b5e2812b4" kindref="member">q</ref>;}</highlight></codeline>
<codeline lineno="72" refid="classPrimalClassifier_1ad0c3b7577b6c11da7394105dd2002f1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1ad0c3b7577b6c11da7394105dd2002f1d" kindref="member">setpNorm</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p)<sp/>{this-&gt;p<sp/>=<sp/>p;}</highlight></codeline>
<codeline lineno="77" refid="classPrimalClassifier_1a7e5c459cb4a377c794502cd9831ee095" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1a7e5c459cb4a377c794502cd9831ee095" kindref="member">setFlexible</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1a5d41554dc1158ede39d387fecf73c96e" kindref="member">flexible</ref>)<sp/>{this-&gt;flexible<sp/>=<sp/><ref refid="classPrimalClassifier_1a5d41554dc1158ede39d387fecf73c96e" kindref="member">flexible</ref>;}</highlight></codeline>
<codeline lineno="82" refid="classPrimalClassifier_1a049f4814d38b456c80c40cee5595502b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1a049f4814d38b456c80c40cee5595502b" kindref="member">setAlphaAprox</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPrimalClassifier_1a2668546ac4a39e10f72cbd2e865c41a7" kindref="member">alpha_aprox</ref>)<sp/>{this-&gt;alpha_aprox<sp/>=<sp/><ref refid="classPrimalClassifier_1a2668546ac4a39e10f72cbd2e865c41a7" kindref="member">alpha_aprox</ref>;}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Classifier/include/PrimalClassifier.hpp"/>
  </compounddef>
</doxygen>
