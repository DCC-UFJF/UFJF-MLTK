<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="Validation_8hpp" kind="file" language="C++">
    <compoundname>Validation.hpp</compoundname>
    <includes refid="Classifier_8hpp" local="yes">Classifier.hpp</includes>
    <includes refid="Data_8hpp" local="yes">Data.hpp</includes>
    <includes refid="Solution_8hpp" local="yes">Solution.hpp</includes>
    <includedby refid="FeatureSelection_8hpp" local="yes">/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/FeatureSelection/include/FeatureSelection.hpp</includedby>
    <includedby refid="AOS_8hpp" local="yes">/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/FeatureSelection/include/AOS.hpp</includedby>
    <includedby refid="AOS_8cpp" local="yes">/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/FeatureSelection/src/AOS.cpp</includedby>
    <includedby refid="Validation_8cpp" local="yes">/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>Kernel.hpp</label>
        <link refid="Kernel_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>iterator</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="17">
        <label>Point.hpp</label>
        <link refid="Point_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>numeric</label>
      </node>
      <node id="2">
        <label>Classifier.hpp</label>
        <link refid="Classifier_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="16">
        <label>fstream</label>
      </node>
      <node id="4">
        <label>Solution.hpp</label>
        <link refid="Solution_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Statistics.hpp</label>
        <link refid="Statistics_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cstdio</label>
      </node>
      <node id="23">
        <label>ctime</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="9">
        <label>utility</label>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="18">
        <label>Utils.hpp</label>
        <link refid="Utils_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Timer.hpp</label>
        <link refid="Timer_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>Learner.hpp</label>
        <link refid="Learner_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="10">
        <label>Data.hpp</label>
        <link refid="Data_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="1">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp</label>
        <link refid="Validation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/FeatureSelection/include/Golub.hpp</label>
        <link refid="Golub_8hpp_source"/>
      </node>
      <node id="3">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/FeatureSelection/include/AOS.hpp</label>
        <link refid="AOS_8hpp_source"/>
      </node>
      <node id="4">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/FeatureSelection/include/Fisher.hpp</label>
        <link refid="Fisher_8hpp_source"/>
      </node>
      <node id="2">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/FeatureSelection/include/FeatureSelection.hpp</label>
        <link refid="FeatureSelection_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/FeatureSelection/include/RFE.hpp</label>
        <link refid="RFE_8hpp_source"/>
      </node>
      <node id="1">
        <label>/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp</label>
        <link refid="Validation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structValidationSolution" prot="public">ValidationSolution</innerclass>
    <innerclass refid="classValidation" prot="public">Validation</innerclass>
    <innerclass refid="structValidation_1_1CrossValidation" prot="public">Validation::CrossValidation</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classValidation" kindref="compound">Validation</ref> wrapper class</para>
<para><simplesect kind="author"><para>Mateus Coutinho Marim </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>VALIDATION__HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VALIDATION__HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Classifier_8hpp" kindref="compound">Classifier.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Data_8hpp" kindref="compound">Data.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Solution_8hpp" kindref="compound">Solution.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="structValidationSolution" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structValidationSolution" kindref="compound">ValidationSolution</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classSolution" kindref="compound">Solution</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attributes</highlight></codeline>
<codeline lineno="19" refid="structValidationSolution_1a00e68fd11f322fdc4058bba59efd3db5" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structValidationSolution_1a00e68fd11f322fdc4058bba59efd3db5" kindref="member">accuracy</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="21" refid="structValidationSolution_1a967e6a3839a1ac883d41e5b935eb2137" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structValidationSolution_1a967e6a3839a1ac883d41e5b935eb2137" kindref="member">precision</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="23" refid="structValidationSolution_1a5ce08ec45f0c352164f9d6301f3edbaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structValidationSolution_1a5ce08ec45f0c352164f9d6301f3edbaf" kindref="member">recall</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="25" refid="structValidationSolution_1a5164f744e7e5b3e4b8d27ac5a0e584b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structValidationSolution_1a5164f744e7e5b3e4b8d27ac5a0e584b5" kindref="member">tnrate</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="27" refid="structValidationSolution_1aa13f916ba0d0513c62f6c3183f33d4f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structValidationSolution_1aa13f916ba0d0513c62f6c3183f33d4f4" kindref="member">tprate</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="29" refid="structValidationSolution_1a936e73dc0d14121304e7031593bd842f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structValidationSolution_1a936e73dc0d14121304e7031593bd842f" kindref="member">falsePositive</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31" refid="structValidationSolution_1a654bec4c5a19b8474e784f0bf609c5b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structValidationSolution_1a654bec4c5a19b8474e784f0bf609c5b8" kindref="member">falseNegative</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33" refid="structValidationSolution_1aa074673534cfc23d82a06e82576f836f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structValidationSolution_1aa074673534cfc23d82a06e82576f836f" kindref="member">trueNegative</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35" refid="structValidationSolution_1a84e59f55bf7e2b296eb21977828d9f07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structValidationSolution_1a84e59f55bf7e2b296eb21977828d9f07" kindref="member">truePositive</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="42" refid="classValidation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classValidation" kindref="compound">Validation</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">private<sp/>:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classClassifier" kindref="compound">Classifier&lt; T &gt;</ref><sp/><sp/>*classifier;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Data&lt;<sp/>T<sp/>&gt;<sp/>&gt;<sp/>sample;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Data&lt;<sp/>T<sp/>&gt;<sp/>&gt;<sp/>train_sample,<sp/>test_sample;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initial_error,<sp/>limit_error,<sp/>actual_error;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kernel_param;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kernel_type;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbose<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structValidationSolution" kindref="compound">ValidationSolution</ref><sp/>solution;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">public<sp/>:</highlight></codeline>
<codeline lineno="68" refid="structValidation_1_1CrossValidation" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structValidation_1_1CrossValidation" kindref="compound">CrossValidation</ref>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>qtde<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fold<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jump<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>seed;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initial_error<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual_error<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>limit_error<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classValidation_1a8421390022d90bebecf761d23533c72e" kindref="member">Validation</ref><sp/>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classValidation_1a8421390022d90bebecf761d23533c72e" kindref="member">Validation</ref><sp/>(std::shared_ptr&lt;<ref refid="classData" kindref="compound">Data&lt; T &gt;</ref><sp/>&gt;<sp/>sample<sp/>=<sp/>std::make_shared&lt;<ref refid="classData" kindref="compound">Data&lt; T &gt;</ref><sp/>&gt;(),<sp/><ref refid="classClassifier" kindref="compound">Classifier&lt; T &gt;</ref><sp/><sp/>*classifier<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed<sp/>=<sp/>666);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;size_t&gt;<sp/>&gt;<sp/>generateConfusionMatrix(<ref refid="classLearner" kindref="compound">Learner&lt; T &gt;</ref><sp/>&amp;learner,<sp/><ref refid="classData" kindref="compound">Data&lt; T &gt;</ref><sp/>&amp;samples);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classValidation_1a1e9580697a164d4bfbe721f2f1589c57" kindref="member">partTrainTest</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fold);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classValidation_1a1a5825e2dd051a72aaffd423a0df55f1" kindref="member">kFold</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fold,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structValidationSolution" kindref="compound">ValidationSolution</ref><sp/><ref refid="classValidation_1aa7f79be36229a955f67a29556152f373" kindref="member">validation</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fold,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qtde);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*********************************************</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Getters<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Data&lt;<sp/>T<sp/>&gt;<sp/>&gt;<sp/><ref refid="classValidation_1a2370445658f5e86e39e8c18fc8b971d0" kindref="member">getTestSample</ref><sp/>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Data&lt;<sp/>T<sp/>&gt;<sp/>&gt;<sp/><ref refid="classValidation_1a11cf518681b25799f231ce973ad45095" kindref="member">getTrainSample</ref><sp/>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*********************************************</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Setters<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSamples(std::shared_ptr&lt;<ref refid="classData" kindref="compound">Data&lt; T &gt;</ref><sp/>&gt;<sp/>sample);</highlight></codeline>
<codeline lineno="135" refid="classValidation_1adddf2e9eb960b7636e6615ecbd9783bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classValidation_1adddf2e9eb960b7636e6615ecbd9783bb" kindref="member">setVerbose</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbose){this-&gt;verbose<sp/>=<sp/>verbose;}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classValidation_1a26fec6a8582bded0583a4754cdba0009" kindref="member">setSeed</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp"/>
  </compounddef>
</doxygen>
