<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classValidation" kind="class" language="C++" prot="public">
    <compoundname>Validation</compoundname>
    <includes refid="Validation_8hpp" local="no">Validation.hpp</includes>
    <innerclass refid="structValidation_1_1CrossValidation" prot="public">Validation::CrossValidation</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classValidation_1acef5bf5ceb4a6100aa1958872ab31fc2" prot="private" static="no" mutable="no">
        <type><ref refid="classClassifier" kindref="compound">Classifier</ref>&lt; T &gt; *</type>
        <definition>Classifier&lt; T &gt;* Validation&lt; T &gt;::classifier</definition>
        <argsstring></argsstring>
        <name>classifier</name>
        <briefdescription>
<para>Model to be validated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="46" column="17" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1a4b503b272218fdcd02799b956db1a3f5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classData" kindref="compound">Data</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Data&lt; T &gt; &gt; Validation&lt; T &gt;::sample</definition>
        <argsstring></argsstring>
        <name>sample</name>
        <briefdescription>
<para>Sample used in the validation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="48" column="21" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1a99e65b01abe3018fb9535274538ed903" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classData" kindref="compound">Data</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Data&lt; T &gt; &gt; Validation&lt; T &gt;::train_sample</definition>
        <argsstring></argsstring>
        <name>train_sample</name>
        <briefdescription>
<para>Train and test sample used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="50" column="21" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1a1e41d7a202896d96b29307f97c215d87" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classData" kindref="compound">Data</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Data&lt; T &gt; &gt; Validation&lt; T &gt;::test_sample</definition>
        <argsstring></argsstring>
        <name>test_sample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="50" column="34" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1aff06171cffc5fa6e78bf71283a947dde" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Validation&lt; T &gt;::initial_error</definition>
        <argsstring></argsstring>
        <name>initial_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="51" column="12" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1aac75860efc15eeddef21151ea0baca1c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Validation&lt; T &gt;::limit_error</definition>
        <argsstring></argsstring>
        <name>limit_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="51" column="26" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1ab98e596a6cb2d9c363abc9d42108bc80" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Validation&lt; T &gt;::actual_error</definition>
        <argsstring></argsstring>
        <name>actual_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="51" column="38" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1a4df5cfc82e26dcb8f75055c98f75d3ab" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Validation&lt; T &gt;::kernel_param</definition>
        <argsstring></argsstring>
        <name>kernel_param</name>
        <briefdescription>
<para>Parameter used in the kernel in case of Dual classifiers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="53" column="12" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1aa1ed6d6cf86c2edab4daa6e143e325fc" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Validation&lt; T &gt;::kernel_type</definition>
        <argsstring></argsstring>
        <name>kernel_type</name>
        <briefdescription>
<para>Type of the kernel in case of Dual classifiers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="55" column="9" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1a1820b66db1007766e8e4619caaec3d86" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Validation&lt; T &gt;::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Controls the information printed in the console. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="57" column="9" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1a87660ed8c62f2dde75edf439c54a5578" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Validation&lt; T &gt;::seed</definition>
        <argsstring></argsstring>
        <name>seed</name>
        <briefdescription>
<para>Seed used in the random generator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="59" column="18" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classValidation_1afd54733c31abfbd038a8294470c46b39" prot="private" static="no" mutable="no">
        <type><ref refid="structValidationSolution" kindref="compound">ValidationSolution</ref></type>
        <definition>ValidationSolution Validation&lt; T &gt;::solution</definition>
        <argsstring></argsstring>
        <name>solution</name>
        <briefdescription>
<para><ref refid="classSolution" kindref="compound">Solution</ref> generated by the validation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="61" column="24" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classValidation_1a8421390022d90bebecf761d23533c72e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Validation&lt; T &gt;::Validation</definition>
        <argsstring>()</argsstring>
        <name>Validation</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="82" column="5" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp" bodystart="388" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classValidation_1a91399f8b544cb22de02b85618ef5b0cc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Validation&lt; T &gt;::Validation</definition>
        <argsstring>(std::shared_ptr&lt; Data&lt; T &gt; &gt; sample=std::make_shared&lt; Data&lt; T &gt; &gt;(), Classifier&lt; T &gt; *classifier=nullptr, unsigned int seed=666)</argsstring>
        <name>Validation</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classData" kindref="compound">Data</ref>&lt; T &gt; &gt;</type>
          <declname>sample</declname>
          <defval>std::make_shared&lt; <ref refid="classData" kindref="compound">Data</ref>&lt; T &gt; &gt;()</defval>
        </param>
        <param>
          <type><ref refid="classClassifier" kindref="compound">Classifier</ref>&lt; T &gt; *</type>
          <declname>classifier</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
          <defval>666</defval>
        </param>
        <briefdescription>
<para>Constructor initializing the sample and classifier used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sample</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample to be used in the validation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>classifier</parametername>
</parameternamelist>
<parameterdescription>
<para>Model to be validated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>Seed to feed the pseudo random number generator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="89" column="14" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp" bodystart="14" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classValidation_1a1e9580697a164d4bfbe721f2f1589c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Validation&lt; T &gt;::partTrainTest</definition>
        <argsstring>(int fold)</argsstring>
        <name>partTrainTest</name>
        <param>
          <type>int</type>
          <declname>fold</declname>
        </param>
        <briefdescription>
<para>Divide the samples in training and test. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fold</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of folds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="96" column="10" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp" bodystart="25" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classValidation_1a1a5825e2dd051a72aaffd423a0df55f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Validation&lt; T &gt;::kFold</definition>
        <argsstring>(int fold, int seed)</argsstring>
        <name>kFold</name>
        <param>
          <type>int</type>
          <declname>fold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Executes the k. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fold</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of folds. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>Seed to feed the pseudo random number generator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="102" column="12" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp" bodystart="73" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classValidation_1aa7f79be36229a955f67a29556152f373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structValidationSolution" kindref="compound">ValidationSolution</ref></type>
        <definition>ValidationSolution Validation&lt; T &gt;::validation</definition>
        <argsstring>(int fold, int qtde)</argsstring>
        <name>validation</name>
        <param>
          <type>int</type>
          <declname>fold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>qtde</declname>
        </param>
        <briefdescription>
<para>Executes the validation with several executions of the k fold algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fold</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of folds. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qtde</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of executions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double <ref refid="classValidation" kindref="compound">Validation</ref> error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="109" column="24" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp" bodystart="266" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classValidation_1a2370445658f5e86e39e8c18fc8b971d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classData" kindref="compound">Data</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt; Data&lt; T &gt; &gt; Validation&lt; T &gt;::getTestSample</definition>
        <argsstring>()</argsstring>
        <name>getTestSample</name>
        <briefdescription>
<para>Get the train sample used in the validation of the model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classData" kindref="compound">Data</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="119" column="21" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp" bodystart="378" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classValidation_1a11cf518681b25799f231ce973ad45095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classData" kindref="compound">Data</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt; Data&lt; T &gt; &gt; Validation&lt; T &gt;::getTrainSample</definition>
        <argsstring>()</argsstring>
        <name>getTrainSample</name>
        <briefdescription>
<para>Get the train sample used in the validation of the model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classData" kindref="compound">Data</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="124" column="21" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classValidation_1a2dc480e3008a6a228ae3092e1e93651c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Validation&lt; T &gt;::setSamples</definition>
        <argsstring>(std::shared_ptr&lt; Data&lt; T &gt; &gt; sample)</argsstring>
        <name>setSamples</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classData" kindref="compound">Data</ref>&lt; T &gt; &gt;</type>
          <declname>sample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="130" column="10" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp" bodystart="391" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classValidation_1adddf2e9eb960b7636e6615ecbd9783bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Validation&lt; T &gt;::setVerbose</definition>
        <argsstring>(int verbose)</argsstring>
        <name>setVerbose</name>
        <param>
          <type>int</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
<para>Set the verbose. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>Verbose level. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="135" column="10" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classValidation_1a26fec6a8582bded0583a4754cdba0009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Validation&lt; T &gt;::setSeed</definition>
        <argsstring>(unsigned int seed)</argsstring>
        <name>setSeed</name>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Set the seed used in the validation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>Seed to be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="140" column="10" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp" bodystart="396" bodyend="398"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classValidation_1a4c863a5c9486ef6afb60b4aa8fb65889" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; size_t &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; size_t &gt; &gt; Validation&lt; T &gt;::generateConfusionMatrix</definition>
        <argsstring>(Learner&lt; T &gt; &amp;learner, Data&lt; T &gt; &amp;samples)</argsstring>
        <name>generateConfusionMatrix</name>
        <param>
          <type><ref refid="classLearner" kindref="compound">Learner</ref>&lt; T &gt; &amp;</type>
          <declname>learner</declname>
        </param>
        <param>
          <type><ref refid="classData" kindref="compound">Data</ref>&lt; T &gt; &amp;</type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="91" column="24" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/src/Validation.cpp" bodystart="401" bodyend="426"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class of methods for the validation of ML algorithms. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" line="42" column="1" bodyfile="/home/mateuscmarim/Repositories/UFJF-MLTK/Modules/Validation/include/Validation.hpp" bodystart="42" bodyend="141"/>
    <listofallmembers>
      <member refid="classValidation_1ab98e596a6cb2d9c363abc9d42108bc80" prot="private" virt="non-virtual"><scope>Validation</scope><name>actual_error</name></member>
      <member refid="classValidation_1acef5bf5ceb4a6100aa1958872ab31fc2" prot="private" virt="non-virtual"><scope>Validation</scope><name>classifier</name></member>
      <member refid="classValidation_1a4c863a5c9486ef6afb60b4aa8fb65889" prot="public" virt="non-virtual"><scope>Validation</scope><name>generateConfusionMatrix</name></member>
      <member refid="classValidation_1a2370445658f5e86e39e8c18fc8b971d0" prot="public" virt="non-virtual"><scope>Validation</scope><name>getTestSample</name></member>
      <member refid="classValidation_1a11cf518681b25799f231ce973ad45095" prot="public" virt="non-virtual"><scope>Validation</scope><name>getTrainSample</name></member>
      <member refid="classValidation_1aff06171cffc5fa6e78bf71283a947dde" prot="private" virt="non-virtual"><scope>Validation</scope><name>initial_error</name></member>
      <member refid="classValidation_1a4df5cfc82e26dcb8f75055c98f75d3ab" prot="private" virt="non-virtual"><scope>Validation</scope><name>kernel_param</name></member>
      <member refid="classValidation_1aa1ed6d6cf86c2edab4daa6e143e325fc" prot="private" virt="non-virtual"><scope>Validation</scope><name>kernel_type</name></member>
      <member refid="classValidation_1a1a5825e2dd051a72aaffd423a0df55f1" prot="public" virt="non-virtual"><scope>Validation</scope><name>kFold</name></member>
      <member refid="classValidation_1aac75860efc15eeddef21151ea0baca1c" prot="private" virt="non-virtual"><scope>Validation</scope><name>limit_error</name></member>
      <member refid="classValidation_1a1e9580697a164d4bfbe721f2f1589c57" prot="public" virt="non-virtual"><scope>Validation</scope><name>partTrainTest</name></member>
      <member refid="classValidation_1a4b503b272218fdcd02799b956db1a3f5" prot="private" virt="non-virtual"><scope>Validation</scope><name>sample</name></member>
      <member refid="classValidation_1a87660ed8c62f2dde75edf439c54a5578" prot="private" virt="non-virtual"><scope>Validation</scope><name>seed</name></member>
      <member refid="classValidation_1a2dc480e3008a6a228ae3092e1e93651c" prot="public" virt="non-virtual"><scope>Validation</scope><name>setSamples</name></member>
      <member refid="classValidation_1a26fec6a8582bded0583a4754cdba0009" prot="public" virt="non-virtual"><scope>Validation</scope><name>setSeed</name></member>
      <member refid="classValidation_1adddf2e9eb960b7636e6615ecbd9783bb" prot="public" virt="non-virtual"><scope>Validation</scope><name>setVerbose</name></member>
      <member refid="classValidation_1afd54733c31abfbd038a8294470c46b39" prot="private" virt="non-virtual"><scope>Validation</scope><name>solution</name></member>
      <member refid="classValidation_1a1e41d7a202896d96b29307f97c215d87" prot="private" virt="non-virtual"><scope>Validation</scope><name>test_sample</name></member>
      <member refid="classValidation_1a99e65b01abe3018fb9535274538ed903" prot="private" virt="non-virtual"><scope>Validation</scope><name>train_sample</name></member>
      <member refid="classValidation_1aa7f79be36229a955f67a29556152f373" prot="public" virt="non-virtual"><scope>Validation</scope><name>validation</name></member>
      <member refid="classValidation_1a8421390022d90bebecf761d23533c72e" prot="public" virt="non-virtual"><scope>Validation</scope><name>Validation</name></member>
      <member refid="classValidation_1a91399f8b544cb22de02b85618ef5b0cc" prot="public" virt="non-virtual"><scope>Validation</scope><name>Validation</name></member>
      <member refid="classValidation_1a1820b66db1007766e8e4619caaec3d86" prot="private" virt="non-virtual"><scope>Validation</scope><name>verbose</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
